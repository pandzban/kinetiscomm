<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\timer.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\timer.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Jan 23 22:25:59 2020
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Critical_Section &rArr; get_acdc &rArr; swiatlo &rArr; __aeabi_ddiv
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[41]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1a]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a]">ADC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1b]">CMP0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[24]">DAC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[b]">DMA0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[c]">DMA1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[d]">DMA2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[e]">DMA3_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[10]">FTFA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[14]">I2C1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[22]">I2S0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[28]">LCD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[12]">LLW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[27]">LPTimer_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[11]">LVD_LVW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[26]">MCG_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[21]">PIT_IRQHandler</a> from pit.o(i.PIT_IRQHandler) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[29]">PORTA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2a]">PORTC_PORTD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[20]">RTC_Seconds_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[f]">Reserved20_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[15]">SPI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[16]">SPI1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from pit.o(i.SysTick_Handler) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_mkl46z4.o(i.SystemInit) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[1c]">TPM0_IRQHandler</a> from tpm.o(i.TPM0_IRQHandler) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1d]">TPM1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1e]">TPM2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[25]">TSI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[17]">UART0_IRQHandler</a> from uart.o(i.UART0_IRQHandler) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[19]">UART2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[23]">USB0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2d]">__main</a> from __main.o(!!!main) referenced from startup_mkl46z4.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[83]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[85]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[86]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[87]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[88]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[89]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[94]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[95]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[96]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[97]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[98]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[99]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a1]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[32]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[34]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a2]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[36]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Critical_Section &rArr; get_acdc &rArr; swiatlo &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[43]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[39]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PORTC_PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mkl46z4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Enqueue
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Dequeue
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDisplay
</UL>

<P><STRONG><a name="[a8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swiatlo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart12Initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Initialize
</UL>

<P><STRONG><a name="[ab]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[ac]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swiatlo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart12Initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Initialize
</UL>

<P><STRONG><a name="[ad]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[38]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ae]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[af]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b0]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swiatlo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart12Initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Initialize
</UL>

<P><STRONG><a name="[45]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[44]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swiatlo
</UL>

<P><STRONG><a name="[b3]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>Critical_Section</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.Critical_Section))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Critical_Section &rArr; get_acdc &rArr; swiatlo &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_acdc
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>GB_Dequeue</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, transmission.o(i.GB_Dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GB_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_is_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[4b]"></a>GB_Enqueue</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, transmission.o(i.GB_Enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_is_space
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Data
</UL>

<P><STRONG><a name="[5e]"></a>GB_Init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, transmission.o(i.GB_Init))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[4d]"></a>GB_Shift</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, transmission.o(i.GB_Shift))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GB_Shift
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_is_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[49]"></a>GB_is_empty</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, transmission.o(i.GB_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Shift
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Dequeue
</UL>

<P><STRONG><a name="[4c]"></a>GB_is_space</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, transmission.o(i.GB_is_space))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Enqueue
</UL>

<P><STRONG><a name="[52]"></a>GB_read_first_el</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, transmission.o(i.GB_read_first_el))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[4e]"></a>GB_recv_to</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, transmission.o(i.GB_recv_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GB_recv_to &rArr; Load_Data &rArr; GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Data
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
</UL>

<P><STRONG><a name="[53]"></a>GB_should_move</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, transmission.o(i.GB_should_move))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[51]"></a>GB_to_send</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, transmission.o(i.GB_to_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GB_to_send &rArr; GB_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Enqueue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_should_move
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_read_first_el
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Shift
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
</UL>

<P><STRONG><a name="[56]"></a>Initialization_List</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.Initialization_List))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Initialization_List &rArr; uart12Initialize &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart12Initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Initialize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdInitialize
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDisplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pitInitialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsInitialize
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arr_get_ready
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdcint
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Initialize
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>Load_Arrays</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.Load_Arrays))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Load_Arrays &rArr; Load_Data &rArr; GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>Load_Data</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, transmission.o(i.Load_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Load_Data &rArr; GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_Enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Arrays
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_recv_to
</UL>

<P><STRONG><a name="[21]"></a>PIT_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, pit.o(i.PIT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>QS_Empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, send.o(i.QS_Empty))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Send
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>QS_Enqueue</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, send.o(i.QS_Enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = QS_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[64]"></a>QS_Full</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, send.o(i.QS_Full))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Enqueue
</UL>

<P><STRONG><a name="[67]"></a>QS_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, send.o(i.QS_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Initialize
</UL>

<P><STRONG><a name="[65]"></a>QS_Send</STRONG> (Thumb, 146 bytes, Stack size 12 bytes, send.o(i.QS_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = QS_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Empty
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>Q_Initialize</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, send.o(i.Q_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Q_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[6b]"></a>Q_Receive</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, send.o(i.Q_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Q_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
</UL>

<P><STRONG><a name="[55]"></a>Q_Send</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, send.o(i.Q_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Q_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
</UL>

<P><STRONG><a name="[68]"></a>Receive</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(i.Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Receive &rArr; Receive_Data &rArr; GB_recv_to &rArr; Load_Data &rArr; GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Receive_Data</STRONG> (Thumb, 658 bytes, Stack size 24 bytes, transmission.o(i.Receive_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Receive_Data &rArr; GB_recv_to &rArr; Load_Data &rArr; GB_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_mc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Send
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Receive
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_recv_to
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive
</UL>

<P><STRONG><a name="[76]"></a>Set_Uarts_Functions</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Set_Uarts_Functions))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pit.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, system_mkl46z4.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>TPM0_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tpm.o(i.TPM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TPM0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button1Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Transmit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Transmit &rArr; Transmit_Data &rArr; GB_to_send &rArr; GB_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>Transmit_Data</STRONG> (Thumb, 666 bytes, Stack size 24 bytes, transmission.o(i.Transmit_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Transmit_Data &rArr; GB_to_send &rArr; GB_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_mc
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Initialize
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Send
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Receive
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Enqueue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_is_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit
</UL>

<P><STRONG><a name="[17]"></a>UART0_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_IRQHandler &rArr; QS_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Send
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QS_Empty
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, slcd.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdErr
</UL>

<P><STRONG><a name="[5b]"></a>acdcint</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, acdc.o(i.acdcint))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[71]"></a>arr_append</STRONG> (Thumb, 206 bytes, Stack size 36 bytes, transmission.o(i.arr_append))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = arr_append &rArr; clear_arrey
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mass_append
</UL>

<P><STRONG><a name="[5c]"></a>arr_get_ready</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, transmission.o(i.arr_get_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arr_get_ready &rArr; clear_arrey
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arrey
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[6d]"></a>button1Read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, buttons.o(i.button1Read))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>clear_arrey</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, transmission.o(i.clear_arrey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_arrey
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arr_get_ready
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Data
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arr_append
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_to_send
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB_recv_to
</UL>

<P><STRONG><a name="[6a]"></a>delay_mc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, extra.o(i.delay_mc))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_Data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
</UL>

<P><STRONG><a name="[72]"></a>display_slcd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, extra.o(i.display_slcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = display_slcd &rArr; slcdDisplay &rArr; slcdSetTab
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>get_Format</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, assoc.o(i.get_Format))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_Format
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mass_append
</UL>

<P><STRONG><a name="[47]"></a>get_acdc</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, acdc.o(i.get_acdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = get_acdc &rArr; swiatlo &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mass_append
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swiatlo
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pit_time
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Critical_Section
</UL>

<P><STRONG><a name="[74]"></a>get_pit_time</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pit.o(i.get_pit_time))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_acdc
</UL>

<P><STRONG><a name="[58]"></a>ledsInitialize</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, leds.o(i.ledsInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[37]"></a>main</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; Critical_Section &rArr; get_acdc &rArr; swiatlo &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_slcd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Uarts_Functions
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Arrays
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Critical_Section
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[75]"></a>mass_append</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, transmission.o(i.mass_append))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = mass_append &rArr; arr_append &rArr; clear_arrey
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Format
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arr_append
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_acdc
</UL>

<P><STRONG><a name="[59]"></a>pitInitialize</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, pit.o(i.pitInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pitInitialize &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[61]"></a>slcdDisplay</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, slcd.o(i.slcdDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = slcdDisplay &rArr; slcdSetTab
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdSetTab
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdErr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_slcd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[7e]"></a>slcdDotUpdate</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, slcd.o(i.slcdDotUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdSetTab
</UL>

<P><STRONG><a name="[7a]"></a>slcdErr</STRONG> (Thumb, 190 bytes, Stack size 4 bytes, slcd.o(i.slcdErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = slcdErr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDisplay
</UL>

<P><STRONG><a name="[57]"></a>slcdInitialize</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, slcd.o(i.slcdInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[7c]"></a>slcdSetTab</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, slcd.o(i.slcdSetTab))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = slcdSetTab
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDotUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slcdDisplay
</UL>

<P><STRONG><a name="[73]"></a>swiatlo</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, acdc.o(i.swiatlo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = swiatlo &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_acdc
</UL>

<P><STRONG><a name="[5a]"></a>systickInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, pit.o(i.systickInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = systickInit &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[5f]"></a>uart0Initialize</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, uart.o(i.uart0Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uart0Initialize &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>

<P><STRONG><a name="[60]"></a>uart12Initialize</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, uart.o(i.uart12Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uart12Initialize &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization_List
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[63]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pit.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_IRQHandler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pitInitialize
</UL>

<P><STRONG><a name="[78]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pit.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pitInitialize
</UL>

<P><STRONG><a name="[79]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pit.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pitInitialize
</UL>

<P><STRONG><a name="[6c]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tpm.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0Initialize
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
